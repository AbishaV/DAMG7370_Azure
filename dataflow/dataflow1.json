{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SeattlePet",
						"type": "DatasetReference"
					},
					"name": "readTSVfile"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SF_SeattlePetLicense",
						"type": "DatasetReference"
					},
					"name": "S"
				}
			],
			"transformations": [
				{
					"name": "TransposeColumns"
				},
				{
					"name": "pickRequiredColumn",
					"description": "Picking the required column created in the previous step"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JOB_ID as string (uuid())",
				"}",
				"source(output(",
				"          {License Issue Date} as string,",
				"          {License Number} as string,",
				"          {Animal's Name} as string,",
				"          Species as string,",
				"          {Primary Breed} as string,",
				"          {Secondary Breed} as string,",
				"          {ZIP Code} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> readTSVfile",
				"readTSVfile derive(LIC_ISSUE_DATE = toDate({License Issue Date}, 'MMMM dd yyyy'),",
				"          SEC_BREED = iifNull({Secondary Breed}, 'Unknown'),",
				"          ZIP_CODE = lpad(toString({ZIP Code}),5,'0'),",
				"          SPECIES = upper(Species),",
				"          LIC_NUM = toInteger(translate({License Number}, 'S', '')),",
				"          ANIMAL_NAME = translate({Animal's Name}, '()[]', ''),",
				"          JOB_ID = $JOB_ID,",
				"          LOAD_DT = currentDate()) ~> TransposeColumns",
				"TransposeColumns select(mapColumn(",
				"          PRIMARY_BREED = {Primary Breed},",
				"          LIC_ISSUE_DATE,",
				"          SEC_BREED,",
				"          ZIP_CODE,",
				"          SPECIES = TransposeColumns@SPECIES,",
				"          LIC_NUM,",
				"          ANIMAL_NAME,",
				"          JOB_ID,",
				"          LOAD_DT",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> pickRequiredColumn",
				"pickRequiredColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LICENSE_ISSUE_DATE as string,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LICENSE_ISSUE_DATE = LIC_ISSUE_DATE,",
				"          LICENSE_NUMBER = LIC_NUM,",
				"          ANIMAL_NAME,",
				"          SPECIES,",
				"          PRIMARY_BREED,",
				"          SECONDARY_BREED = SEC_BREED,",
				"          ZIP_CODE,",
				"          DI_JOB_ID = JOB_ID,",
				"          DI_LOAD_DT = LOAD_DT",
				"     )) ~> S"
			]
		}
	}
}